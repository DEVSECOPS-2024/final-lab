name: CI
on:

  push:
  workflow_dispatch:
  
jobs:

  build:
    
    runs-on: ubuntu-latest

    steps:
      - name: Descarga repositorio
        uses: actions/checkout@v3
     
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'                  
          
      #- name: Dependency Check
       # uses: dependency-check/Dependency-Check_Action@1.1.0
      #  with:
       #   project: 'lab-final'
       #   path: '.'
       #   format: 'HTML'
       #   #failOnCVSS: '6'

     # - name: Upload Test results
     #   uses: actions/upload-artifact@master
     #   with:
     #      name: Depcheck report
      #     path: ${{github.workspace}}/reports  

      #- name: Verificar vulnerabilidades críticas
      #  run: |
      #    CVSS_THRESHOLD=6.0  # Cambia esto según tu umbral de CVSS
          
          # Extraer los puntajes CVSS y verificar si alguno supera el umbral
      #    if grep -E 'CVSSv3:[[:space:]]*Base Score: ([0-9]+\.[0-9]+)' ${{github.workspace}}/reports/dependency-check-report.html | awk -F' ' '{ if($NF >= '"$CVSS_THRESHOLD"') exit 1; }'; then
      #      echo "Se encontraron vulnerabilidades críticas con un puntaje CVSS igual o mayor a $CVSS_THRESHOLD."
      #      exit 1
      #    else
      #      echo "No se encontraron vulnerabilidades críticas con un puntaje CVSS igual o mayor a $CVSS_THRESHOLD."
      #    fi 
           
      - name: Docker Login   
        uses: docker/login-action@v2.2.0
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}
          
      - name: Docker Build
        run: |
          docker build --tag mfigueroah/final-lab:latest .
          docker images

      #- name: Run Trivy vulnerability scanner
      #  uses: aquasecurity/trivy-action@master
      #  with:
      #    image-ref: 'mfigueroah/final-lab:latest'
      #    format: 'table'
      #    #exit-code: 0
      #    severity: 'CRITICAL,HIGH,MEDIUM'
                 
     # - name: Docker Push
     #   run: |
     #     docker push mfigueroah/final-lab:latest
      
  #test:
  
    #needs: build
    #runs-on: ubuntu-latest
    #steps: 
                
    #- name: Descarga repositorio
    #  uses: actions/checkout@v3
    
    #- name: SonarCloud
    #  uses: actions/checkout@v3
    #  with:
    #    fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    #- name: SonarCloud Scan
    #  uses: SonarSource/sonarcloud-github-action@master
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
    #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
     
  deploy:
    needs: build
    runs-on: self-hosted
    
    steps:
     
    - name: Pull de la Imagen Docker
      run: docker pull mfigueroah/final-lab:latest
       
    - name: Despliegue
      run: docker run -p 8085:80 --name final-lab-deploy -d mfigueroah/final-lab:latest

    - name: OWASAP ZAP Scan
      uses: zaproxy/action-baseline@v0.11.0
      with:
        target: 'http://localhost:8080/'

 

